name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: "1"
  ASPNETCORE_ENVIRONMENT: Test
  ConnectionStrings__DefaultConnection: "Server=localhost;Port=3306;Database=IdentityService;Uid=root;Pwd=password;"
  RABBITMQ_HOST: rabbitmq

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mariadb:11.7
        env:
          MARIADB_ROOT_PASSWORD: password
          MARIADB_USER: user
          MARIADB_PASSWORD: password
          MARIADB_DATABASE: IdentityService
          MARIADB_AUTHENTICATION_PLUGIN: mysql_native_password
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mariadb-admin ping -uroot -ppassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:4-management
        ports: ["5672:5672","15672:15672"]
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test (skip RabbitMqTopologyTests)
        run: |
          dotnet test \
            --no-build \
            --configuration Release \
            --filter "FullyQualifiedName!~RabbitMqTopologyTests" \
            --logger "trx;LogFileName=test-results.trx"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*.trx'

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - name: checkout-service
            path: src/Services/CheckoutService/CheckoutService.Api
          - name: identity-service
            path: src/Services/IdentityService/IdentityService.Api
          - name: order-service
            path: src/Services/OrderService/OrderService.Api
          - name: payment-service
            path: src/Services/PaymentService/PaymentService.Api
          - name: gateway-api
            path: src/Gateways/Gateway.Api

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.path }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/bugbucks-${{ matrix.name }}:${{ github.sha }}
