name: BugBucks
services:
  mariadb:
    image: mariadb:11.7
    container_name: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: IdentityDb
      MYSQL_USER: IdentityDb_user
      MYSQL_PASSWORD: IdentityDb_password
    ports:
      - "3306:3306"
    networks:
      - bugbucks-net
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/orderdb-init.sql:/docker-entrypoint-initdb.d/orderdb-init.sql
      - ./docker/paymentdb-init.sql:/docker-entrypoint-initdb.d/paymentdb-init.sql
  
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.28
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/" ]
      interval: 5s
      retries: 5
    networks:
      - bugbucks-net

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.28
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - bugbucks-net
  
  
  #  loggingservice:
  #    build:
  #      context: ../
  #      dockerfile: ./src/Services/LoggingService/LoggingService.Api/Dockerfile
  #
  #    container_name: loggingservice
  #    ports:
  #      - "8080:8080"
  #    #environment:
  #    #  - ASPNETCORE_ENVIRONMENT=Development
  #    depends_on:
  #      elasticsearch:
  #        condition: service_healthy  # Wait for Elasticsearch status to become HEALTHY 
  #      
  #    networks:
  #      - bugbucks-net

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    command: server
    environment:
      VAULT_ADDR: "http://0.0.0.0:8200"
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - ./config.hcl:/vault/config/config.hcl:ro
      - vault_data:/vault/file
    networks:
      - bugbucks-net
  
  
  seq:
    image: datalust/seq:latest
    container_name: seq
    ports:
      - "5341:80"
    environment:
      ACCEPT_EULA: "Y"
    networks:
      - bugbucks-net
  
  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # RabbitMQ messaging port
      - "15672:15672"  # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - bugbucks-net
  otel-collector:
    image: otel/opentelemetry-collector-contrib
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"     # OTLP gRPC
      - "4318:4318"     # OTLP HTTP 
      - "8889:8889"
    networks:
      - bugbucks-net
    depends_on: [ tempo, prometheus ]

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - bugbucks-net

  tempo:
    image: grafana/tempo
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - tempo_data:/tmp/tempo
      - ./tempo.yaml:/etc/tempo.yaml:ro
    ports:
      - "3200:3200"
    networks:
      - bugbucks-net

  #loki:
  #  image: grafana/loki
  #  container_name: loki
  #  command: [ "-config.file=/etc/loki/local-config.yaml" ]
  #  ports:
  #    - "3100:3100"
  #  networks:
  #    - bugbucks-net
  #  volumes:
  #    - loki_data:/loki

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    #depends_on: [ prometheus, tempo, loki ]
    depends_on: [ prometheus, tempo ]
    networks:
      - bugbucks-net
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning/:/etc/grafana/provisioning
  
  gateway.api:
    build:
      context: ../
      dockerfile: src/Gateways/Gateway.Api/Dockerfile
    container_name: bugbucks-gateway
    networks:
      - bugbucks-net
    ports:
      - "6000:8080"
  
  identityservice:
    build:
      context: ../
      dockerfile: src/Services/IdentityService/IdentityService.Api/Dockerfile
    container_name: bugbucks-identity-service
    networks:
      - bugbucks-net
    ports:
      - "6001:8080"
  
  checkoutservice:
    build:
      context: ../
      dockerfile: src/Services/CheckoutService/CheckoutService.Api/Dockerfile
    container_name: bugbucks-checkout-service
    networks:
      - bugbucks-net
    ports:
      - "6002:8080"

  orderservice:
    build:
      context: ../
      dockerfile: src/Services/OrderService/OrderService.Api/Dockerfile
    container_name: bugbucks-order-service
    networks:
      - bugbucks-net
    ports:
      - "6003:8080"

  paymentservice:
    build:
      context: ../
      dockerfile: src/Services/PaymentService/PaymentService.Api/Dockerfile
    container_name: bugbucks-payment-service
    networks:
      - bugbucks-net
    ports:
      - "6004:8080"
networks:
  bugbucks-net:
    driver: bridge

volumes:
  mariadb_data:
  vault_data:
  prometheus_data:
  tempo_data:
  loki_data:
  grafana_data: